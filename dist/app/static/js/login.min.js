"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var loginCheck = function () {
  var $form = document.querySelector('.registerForm');
  var $inps = $form.querySelectorAll('input'); //获取用户名旁的span标签

  var $span = $inps[0].parentNode.querySelector("span"); //获取到提交按钮

  var $sub = document.querySelector('.sub input');
  return {
    init: function init() {
      this.event();
    },
    event: function event() {
      var self = this;

      for (var i = 1; i < 2; i++) {
        $inps[i].onblur = function (e) {
          // console.log($inps[0].value,$inps[1].value)
          loginAjax("http://localhost:1234/php/my-nubia/server/php/login.php", {
            data: {
              "telphone": $inps[0].value,
              "password": $inps[1].value
            }
          }).then(function (res) {
            $span.innerHTML = "";
            self.success($inps[0]);
          }).catch(function (res) {
            console.log(res); // $span.innerHTML = "手机号或密码错误,请重新输入";
          });
        };
      }

      $sub.onclick = function () {
        if ($inps[0].className.indexOf("has-success") === -1) {
          $span.innerHTML = "手机号或密码错误,请重新输入";
          $inps[0].focus();
          return false;
        }
      };
    },
    success: function success($div) {
      $div.className = $div.className.replace(/(\s?has-success)/g, '');
      $div.className += 'has-success';
    }
  };
}(); //  解决get请求的缓存问题


function loginAjax(url, obj) {
  var xhr = new XMLHttpRequest();
  var _default = {
    method: "GET",
    data: null
  };

  if (obj) {
    if (_typeof(obj) == "object") {
      for (var key in _default) {
        if (key in obj) {
          _default[key] = obj[key];
        }
      }
    }
  }

  _default.method = _default.method.toUpperCase();

  if (_default.method == 'GET') {
    var flag = url.indexOf('?') == -1 ? "?" : "&";
    url += flag;

    for (var i in _default.data) {
      var keyValue = "".concat(i, "=").concat(_default.data[i]);
      url += keyValue + '&';
    } // 添加一个时间戳, 解决get请求的缓存问题


    url += "_=".concat(Date.now());
    _default.data = null;
  } else if (_default.method == 'POST') {
    _default.data = JSON.stringify(_default.data);
  } else {
    console.log('告辞!');
    return;
  }

  xhr.open(_default.method, url, true);
  xhr.send(_default.data);
  return new Promise(function (resolve, reject) {
    xhr.onreadystatechange = function () {
      if (xhr.readyState == 4) {
        if (xhr.status == 200 && xhr.responseText == "true") {
          resolve(xhr.response);
        } else {
          reject(xhr.response);
        }
      }
    };
  });
}